cmds_run=이 페이지를 생성 할 때 실행되는 명령
whats_this_title=이게 뭐야?
state_enable=사용
state_disable=비활성화
state_refresh=새롭게 하다
state_restart=재시작
state_maintenance=유지
state_degraded=타락한
state_clear=명확한
index_title=서비스 관리 시설
index_detail=SMF 서비스 목록
index_svc_type=서비스 유형을 선택하십시오
index_extraopts=볼 추가 옵션을 추가
index_include_disabled=장애인 서비스를 포함 하시겠습니까?
index_apply=체크 된 항목에 적용
index_sort_by=정렬 기준
index_create_new_service=새로운 서비스 만들기
index_search_instance=서비스 검색
index_select=고르다
index_delete=지우다
index_Select=고르다
index_FMRI=FMRI
index_INST=INST
index_STATE=상태
index_DESC=DESC
index_NSTATE=NSTATE
index_SCOPE=범위
index_STIME=STIME
index_deleteconfirm=선택한 서비스를 영구적으로 삭제 하시겠습니까?
search_instance_title=검색
search_instance_detail=서비스 인스턴스 검색/찾아보기
search_instance_go=가다!
search_instance_browse=서비스 찾아보기
search_instance_noresults=이 검색에 대한 결과가 없습니다!
instance_viewer_title=인스턴스 정보
instance_viewer_detail=인스턴스 세부 사항
instance_viewer_goto_pgroup_editor=속성 그룹/속성보기/편집
instance_viewer_goto_dep_viewer=종속성/종속 트리보기
dep_viewer_title=의존성/의존
dep_viewer_detail=인스턴스의 종속성/종속 트리
dep_viewer_apply=체크 된 항목에 적용
dep_viewer_depy_info=의존성 트리
dep_viewer_dept_info=종속 트리
dep_viewer_back=인스턴스 뷰어
state_editor_title=서비스 상태 정보
state_editor_detail=인스턴스 상태 세부 사항
state_editor_stateinfo=인스턴스 상태 정보
state_editor_apply=체크 된 항목에 적용
state_editor_depy_info=의존성 정보
state_editor_dept_info=종속 정보
log_viewer_title=로그 파일 뷰어
log_viewer_detail=로그 파일보기 (종료)
log_viewer_show_last=마지막으로 표시
log_viewer_num_lines=라인
log_viewer_submit=업데이트보기
property_group_editor_title=속성 그룹 정보
property_group_editor_detail=서비스를위한 속성 그룹
property_group_editor_addsinst=서비스/인스턴스 선택
property_group_editor_addname=새로운 속성 그룹 이름
property_group_editor_addtype=새로운 속성 그룹 유형
property_group_editor_addpg=새 속성 그룹 추가
property_group_editor_add=더하다
property_group_editor_apply=체크 된 항목에 적용
property_group_editor_deleteconfirm=선택한 속성 그룹을 영구적으로 삭제 하시겠습니까?
property_group_editor_delete=지우다
property_group_editor_select=고르다
property_group_editor_sinst=서비스/인스턴스
property_group_editor_pgroup_name=속성 그룹 이름
property_group_editor_pgroup_type=속성 그룹 유형
property_group_editor_back=인스턴스 뷰어
property_editor_title=부동산 정보
property_editor_detail=서비스/속성 그룹의 속성
property_editor_addprop=새 부동산 추가
property_editor_addname=새로운 부동산 이름
property_editor_addtype=새로운 부동산 유형
property_editor_addvalue=새로운 부동산 가치
property_editor_add=더하다
property_editor_apply=체크 된 항목에 적용
property_editor_deleteconfirm=선택한 속성/속성을 영구적으로 삭제 하시겠습니까?
property_editor_delete=지우다
property_editor_select=고르다
property_editor_prop_name=부동산 이름
property_editor_prop_type=부동산 유형
property_editor_prop_value=자산 가치
property_editor_update=최신 정보
property_editor_back=속성 그룹
whats_this=(이게 뭐야?)
close_window=창 닫기
svc_chooser_titlesvc=서비스 FMRI를 선택하십시오
svc_chooser_titleinst=서비스 인스턴스 FMRI 선택
svc_chooser_titleboth=서비스/인스턴스 FMRI 선택
svc_chooser_ok=확인
svc_chooser_cancel=취소
svc_chooser_fmri=서비스 FMRI 트리 위치 $1 
path_chooser_title=경로 FMRI를 선택하십시오
path_chooser_ok=확인
path_chooser_cancel=취소
path_chooser_path=경로 FMRI 트리 위치 $1 
editserv_title=SMF 서비스 편집
editserv_newtitle=새로운 SMF 서비스 생성
editserv_propviewer=서비스 생성 /보기/수정
editserv_service_detail=서비스 내용
editserv_bundle_name=서비스 번들 이름
editserv_service_name=서비스 이름
editserv_service_type=유형
editserv_service_version=버전
editserv_stability=안정
editserv_fmri=FMRI 지정
editserv_instance_detail=인스턴스 세부 사항
editserv_instance_name=인스턴스 이름
editserv_instance_enabled=활성화 되었습니까?
editserv_serv_instname=서비스 또는 인스턴스 레벨을 선택하십시오.
editserv_restarter_detail=재시작 기 세부 사항
editserv_depy_detail=종속성 세부 사항
editserv_depy_name=종속성 이름
editserv_depy_type=종속성 유형
editserv_depy_grouping=종속성 그룹화
editserv_depy_restart_on=다시 시작 값
editserv_dept_detail=종속 세부 사항
editserv_dept_name=종속 이름
editserv_dept_grouping=종속 그룹화
editserv_dept_restart_on=다시 시작 값
editserv_exec_detail=메소드 세부 사항 실행
editserv_exec_name=실행 방법 이름
editserv_exec_timeout_seconds=타임 아웃 (초)
editserv_exec_exec=실행 방법 경로
editserv_exec_user=사용자 방법 자격 증명
editserv_exec_group=그룹 방법 자격 증명
editserv_exec_privileges=특권
editserv_pgroup_detail=특성 그룹 세부 사항
editserv_pgroup_name=속성 그룹 이름
editserv_pgroup_type=속성 그룹 유형
editserv_sinst_pgroup_name=[서비스/인스턴스]. [Property_Group]
editserv_prop_detail=속성 세부 사항
editserv_prop_name=부동산 이름
editserv_prop_type=부동산 유형
editserv_prop_value=자산 가치
editserv_template_detail=템플릿 세부 사항
editserv_template_common_name=공통 이름
editserv_template_description=기술
editserv_man_detail=맨 페이지 세부 사항
editserv_man_title=표제
editserv_man_section=부분
editserv_man_manpath=맨 패스
editserv_update=최신 정보
editserv_new=새로운
editserv_finish=끝
editserv_cancel=취소
editserv_add=더하다
editserv_addnew=새로운 걸 더하다
editserv_createservice=서비스 만들기
editserv_next=다음
editserv_continue=계속하다
editserv_skip=건너 뛰기
editserv_clear=명확한
editserv_restarter_fmri=재시동 기 FMRI
editserv_dependency=의존
editstate_detail=서비스 상태 편집
editstate_stateinfo=인스턴스 상태 정보
editstate_depy_detail=인스턴스 종속성 정보
editstate_dept_detail=인스턴스 종속 정보
editstate_enable=사용
editstate_disable=비활성화
editstate_refresh=새롭게 하다
editstate_restart=재시작
editstate_clear=명확한
editstate_maintenance=유지
editstate_degraded=타락한
whats_this_stateinfo=svcs 명령에서 얻은 서비스 인스턴스 상태와 관련된 정보가 표시됩니다. svcs (1)를 참조하십시오. smf (5)를 참조하십시오.
whats_this_extraopts=이러한 추가 옵션을 확인하고 아래 서비스 목록에서 보려면 업데이트보기를 클릭하십시오. 옵션의 의미는 svcs 맨 페이지에서 찾을 수 있습니다. svcs (1)를 참조하십시오.
whats_this_enabledonly=활성화 된 서비스 만 표시할지 또는 목록에서 모든 서비스 (활성화 및 비활성화)를 원하는지 선택합니다.
whats_this_create_new_service=새로운 서비스를 추가하려면 여기를 클릭하십시오.
whats_this_serviceviewer=서비스 뷰어는 svcs 명령이 제공 한 목록을 기반으로 시스템에서 사용 가능/실행중인 서비스와 해당 상태의 범주 별보기를 제공합니다. 특정 탭을 클릭하면 해당 카테고리에 특정한 서비스가 표시됩니다 (예 : 네트워크는 svc :/network 형식의 모든 서비스를 보유합니다. 후보 서비스 인스턴스를 확인하고 관련 적용 버튼을 클릭하면 여러 활성화/비활성화/새로 고침/다시 시작/유지 보수/성능 저하/삭제/삭제 작업을 수행 할 수 있습니다. fmri 또는 인스턴스를 각각 클릭하여 개별 서비스/인스턴스를 편집 할 수 있으며 상태를 클릭하여 개별 서비스 인스턴스의 상태를 검사 할 수 있습니다. svcs (1)를 참조하십시오.
whats_this_apply=적절한 서비스를 확인하고이 버튼을 사용하여 서비스 목록의 여러 항목에 대한 작업을 수행 할 수 있습니다. svcadm (1M)을 참조하십시오.
whats_this_FMRI=FMRI는 특정 서비스를 지정하는 URI (Universal Resource Indicator)입니다. '전체'목록 아래에 전체 FMRI가 표시되지만 특정 서비스 카테고리 (예 : 네트워크의 경우 네트워크 범주가 표시되지 않습니다. 특정 서비스 FMRI를 클릭하면 서비스 뷰어로 이동하여 해당 서비스의 속성을 즉시 편집 할 수 있습니다 (주의하십시오). smf (5)를 참조하십시오. svcs (1)를 참조하십시오.
whats_this_INST=인스턴스는 인접한 서비스 FMRI와 연관된 인스턴스 이름입니다. 지정된 서비스에는 여러 인스턴스가있을 수 있습니다. 인스턴스를 클릭하면 서비스 뷰어로 이동하지만 해당 인스턴스의 속성 만 업데이트 할 수 있습니다. 서비스 레벨 및 기타 인스턴스 특성을 업데이트하려면 서비스 FMRI를 클릭하십시오. smf (5)를 참조하십시오. svcs (1)를 참조하십시오.
whats_this_STATE=특정 인스턴스의 상태입니다. 다양한 상태의 의미는 smf 맨 페이지에 설명되어 있습니다. smf (5)를 참조하십시오. svcs (1)를 참조하십시오.
whats_this_DESC=서비스에 대한 텍스트 설명. smf (5)를 참조하십시오. svcs (1)를 참조하십시오.
whats_this_NSTATE=서비스가 전환 될 때 유용한 다음 서비스 상태입니다. '-'는 전환 중이 아님을 나타냅니다. svcs (1)를 참조하십시오.
whats_this_SCOPE=서비스 인스턴스의 범위 이름입니다. smf (5)를 참조하십시오. svcs (1)를 참조하십시오.
whats_this_STIME=서비스가 현재 상태에 들어간 시간 (오늘 인 경우) 또는 날짜입니다. smf (5)를 참조하십시오. svcs (1)를 참조하십시오.
whats_this_Select=여기에서 활성화/비활성화/새로 고침하려는 서비스 목록을 확인하십시오.

whats_this_service_detail=최상위 서비스 정보를 여기에 지정/편집하십시오 : 서비스 이름, 버전 번호, 매니페스트 및 안정성을위한 번들 이름. smf (5)를 참조하십시오. svccfg (1M)를 참조하십시오. service_bundle (4)를 참조하십시오.
whats_this_bundle_name=매니페스트의 서비스 번들 이름입니다. 하나의 매니페스트에 여러 서비스를 묶을 수 있지만 여기서 이름은 중요하지 않습니다. 이미 존재하는 서비스의 경우 SMF 리포지토리에서 매니페스트를 내보낼 때 svccfg가 수행하는 것처럼 내보내도록 설정됩니다. svccfg (1M)를 참조하십시오. service_bundle (4)를 참조하십시오.
whats_this_service_name=서비스 이름. 규칙은 [general_service_category]/[name] 형식을 사용하는 것입니다. 이미 제공된 범주에는 응용 프로그램 (상위 응용 프로그램), 마일스톤 (이름 서비스와 같은 다른 서비스 모음), 플랫폼 (플랫폼 별 서비스), 시스템 (Solaris 시스템 서비스), 장치 (장치 별 서비스), 네트워크 (네트워크/인터넷 서비스) 및 사이트 (사이트 별 설명) 자신의 범주를 지정할 수도 있지만 대부분의 서비스는 위의 하나에 편안하게 맞아야합니다. smf (5)를 참조하십시오.
whats_this_service_version=서비스의 버전 번호를 지정하십시오.
whats_this_instance_detail=여기에서 인스턴스 정보를 지정/편집하십시오 : 인스턴스 이름 및 기본적으로 사용 가능한지 여부. smf (5)를 참조하십시오.
whats_this_instance_name=인스턴스 이름을 지정하십시오. 인스턴스가 하나만있는 서비스는 일반적으로 인스턴스 이름으로 기본을 사용합니다 (예 : inetd). 다른 구성으로 실행되는 동일한 바이너리의 여러 인스턴스를 허용하는 서비스에는 여러 인스턴스가 필요합니다 (예 : 청구 된 inetd 서비스. 다른 포트에서 실행되는 스트림 및 데이터 그램 기반 버전이 필요합니다. smf (5)를 참조하십시오.
whats_this_instance_enabled=이 서비스 인스턴스가 기본적으로 사용 가능한지 여부를 지정하십시오.
whats_this_serv_instname=서비스 또는 인스턴스 레벨에서 정보를 업데이트할지 여부를 지정하십시오. 속성, 종속성 등이 서비스 및 인스턴스 수준 모두에 존재하면 인스턴스 수준 값이 해당 특정 인스턴스에 사용되며, 그렇지 않으면 서비스 수준 값을 상속합니다. 이를 통해 인스턴스는 서비스 수준 사양에서 값을 선택적으로 상속하면서 고유하게 필요할 수있는 값을 설정할 수 있습니다.
whats_this_stability=안정성 값을 지정하십시오.-설정되지 않은 상태로 두십시오.
whats_this_fmri=관련 서비스/인스턴스 FMRI를 지정하십시오.
whats_this_restarter_detail=기본적으로 서비스는 마스터 재시작 기 (시스템/다시 시작 서비스)를 사용하여 동작을 제어합니다. inetd와 같은 위임 된 다시 시작 프로그램도 지정할 수 있습니다. 이름에서 알 수 있듯이 위임 된 다시 시작 서비스를 사용하여 서비스 시작/중지를 처리하고 inetd의 경우 이러한 방법의 이름이 마스터 다시 시작 기반 서비스와 다른 이름으로 표시됩니다. inetd (1M)를 참조하십시오. svc.startd (1M)를 참조하십시오. smf_restarter (5)를 참조하십시오.
whats_this_exec_detail=실행 방법은 smf 서비스의 핵심이며 서비스 시작/중지시 실행할 프로그램을 지정합니다. 위임 된 다시 시작 (예 : inetd)을 사용하는 서비스에는 자체 시작/중지 방법 (예 : inetd_start, inetd_stop)이 있지만 마스터 다시 시작을 사용하는 서비스는 일반적으로 시작 및 중지 방법을 최소한으로 지정합니다. svc.startd (1M)를 참조하십시오. smf_method (5)를 참조하십시오. inetd (1M)를 참조하십시오.
whats_this_exec_name=여기에이 실행 메소드의 고유 이름을 제공하십시오. 마스터 재시작기를 사용하는 서비스의 경우 시작 및 중지 방법이 필수이며 서비스가 활성화되고 종속성이 충족 될 때 각각 실행됩니다. 종속성이 오프라인 상태가되면 서비스가 실패하고 관리자가 서비스 등을 비활성화합니다. smf_method (5)를 참조하십시오. inetd (1M)를 참조하십시오.
whats_this_exec_timeout_seconds=시간 초과를 초과하는 메소드는 종료됩니다. 제한되지 않은 메소드의 경우 제한 시간을 0으로 설정하십시오.
whats_this_exec_exec=메소드와 인수를 실행할 경로를 제공하십시오. 키워드 : kill 및 : true가 제공되며 실행 방법으로 사용할 수 있습니다. 전자는 서비스에 의해 시작된 모든 프로세스를 종료하고 후자는 다시 시작 자에게 성공을 리턴합니다. 또한 메소드 토큰을 사용하여 smf 관련 정보를 메소드에 전달할 수 있습니다. smf_method (5)를 참조하십시오.
whats_this_exec_user=사용자의 기본 메소드 환경 값에 대한 대체를 지정하십시오 (기본 메소드 환경은 init에서 상 속됨).
whats_this_exec_group=그룹의 기본 메소드 환경 값에 대한 대체를 지정하십시오 (기본 메소드 환경은 init에서 상 속됨).
whats_this_exec_privileges=기본 메소드 환경 특권에 대한 대체를 지정하십시오.
whats_this_depy_detail=종속성은 서비스가 실행되기 전에 어떤 서비스를 실행해야하는지 지정하는 방법을 제공합니다. 의존성을 호출하는 것은 SMF의 주요 이점 중 하나입니다. init 스크립트 등이 매우 복잡한 웹에 결정 론적 구조를 부과하기 때문입니다. 의존성은 서비스가 특정 의존성을 기다릴 것을 지정할 수있는 유연성을 제공합니다. 온라인 상태가 되려면 그룹의 한 구성원 (예 : 이름 서비스가 구성되어 있음)을 기다리거나 다른 서비스가 실행되고 있지 않은 경우에만 실행하십시오. smf (5)를 참조하십시오.
whats_this_depy_name=이 종속성에 고유 한 이름을 제공하십시오.
whats_this_depy_type=종속성 유형 (경로 또는 서비스)을 선택하십시오. 경로 종속성에는 명명 된 파일이 있어야합니다 (?). 경로 종속성에 유효한 fmri의 예는 file :: // localhost/path2file입니다. 서비스 의존성은 단지 서비스가 의존하는 것을 식별하는 것입니다.
whats_this_depy_grouping=종속성에 대한 그룹화 값을 선택하십시오. 그룹화 값은 종속성 관계의 특성을 결정합니다. 예를 들어 require_all의 경우 서비스가 시작되기 전에 그룹의 모든 종속성이 온라인/저하되어야하고, require_any의 경우 모든 그룹이 온라인/저하되어야합니다. optional_all의 경우, 사용 가능하고 실행 가능한 모든 서비스가 온라인이어야하고 exclude_all의 경우 종속성이 온라인/성능 저하 인 경우 서비스를 실행하지 않아야합니다.
whats_this_depy_restart_on=여기에 결함 전파 모델을 지정하십시오. 즉, 서비스가 종속성의 결함에 어떻게 대응해야합니까? 값은 없음 (시작 후 종속성에 신경 쓰지 않음), 오류 (종속성에 결함이있는 경우 다시 시작), 다시 시작 (종속성이 다시 시작되면 다시 시작) 및 새로 고침 (종속성이 새로 고쳐지면 다시 시작)이 없습니다.
whats_this_dept_detail=부양 가족은 약간 혼란스러워 보일 수 있습니다. 왜 어떤 서비스가 내 서비스에 의존 하는지를 지정하는 메커니즘이 있는데 후보에 의존성을 추가 할 수 없습니까? 부양 가족은 귀하가 부양 매니페스트를 소유하지 않고이를 수행 할 수없는 상황을 해결합니다. 결과적으로 종속 항목은 종속성과 매우 유사하지만 현재 서비스가이 종속성에 의존하도록 지정하는 대신 현재 서비스가이 하위 서비스/의존에 대한 종속성이라고합니다. smf (5)를 참조하십시오.
whats_this_dept_name=여기에이 이름에 고유 한 이름을 제공하십시오.
whats_this_dept_grouping=이 서비스가 종속에 따라 준수 할 그룹화 값을 선택하십시오. 그룹화 값은 종속성 관계의 특성을 결정합니다. 예를 들어 require_all의 경우 종속을 지정하는 그룹의 모든 서비스는 종속이 시작되기 전에 온라인/저하되어야하고, require_any의 경우 모든 그룹이 온라인/저하되어야합니다. optional_all의 경우 모든 사용 가능하고 실행할 수있는 서비스는 온라인이어야하고 exclude_all의 경우 서비스가 온라인/성능 저하 된 경우 종속 서비스를 실행하지 않아야합니다.
whats_this_dept_restart_on=여기에 결함 전파 모델을 지정하십시오. 즉,이 서비스는 결함을 종속 시스템에 어떻게 전파해야합니까? 값은 없음 (시작 후 서비스에 의존하지 않음), 오류 (서비스에 오류가있는 경우 다시 시작에 따라 다름), 다시 시작 (서비스가 다시 시작되면 다시 시작에 따라 다름) 및 새로 고침 (서비스가 새로 고쳐지면 다시 시작됨)입니다.
whats_this_pgroup_detail=smf에서 모든 서비스 정보, 종속성, 실행 방법 등은 속성 그룹 내에 속성으로 저장됩니다. 또한 서비스는 다른 속성 (예 : inetd 서비스는 inetd 위임 된 재시작자가 이해하고 필요로하는 속성을 지정해야합니다. 서비스는 자체 응용 프로그램 데이터를 속성에 저장할 수도 있습니다. smf (5)를 참조하십시오.
whats_this_pgroup_name=특성 그룹 이름을 지정하십시오. smf (5)를 참조하십시오.
whats_this_pgroup_type=특성 그룹 유형을 지정하십시오. smf (5)를 참조하십시오.
whats_this_sinst_pgroup_name=적절한 서비스/인스턴스 레벨에서 속성 그룹을 선택하십시오. 이를 통해 인스턴스 별 및 서비스 수준에서 속성을 생성/업데이트 할 수 있습니다.
whats_this_prop_detail=특성은 특성 그룹과 연관되며 서비스 관련 정보를 저장하는 데 사용됩니다. smf (5)를 참조하십시오.
whats_this_prop_name=속성 이름을 지정하십시오. smf (5)를 참조하십시오.
whats_this_prop_type=속성 유형을 지정하십시오. 유효한 유형은 count, integer, opaque, host, hostname, net_address_v4, net_address_v6, time, astring, ustring, boolean, fmri, uri입니다. smf (5)를 참조하십시오.
whats_this_prop_value=특성 값을 지정하십시오. smf (5)를 참조하십시오.
whats_this_man_detail=서비스 맨 페이지 설명서에 관한 정보를 제공하십시오. man (1)을 참조하십시오.
whats_this_man_title=맨 페이지 제목을 지정하십시오. man (1)을 참조하십시오.
whats_this_man_section=맨 페이지 섹션을 지정하십시오. man (1)을 참조하십시오.
whats_this_man_manpath=manpath를 지정하십시오. man (1)을 참조하십시오.
whats_this_template_detail=서비스 세부 사항, 일반적으로 사용되는 이름 및 서비스의 기능에 대한 설명을 제공하십시오.
whats_this_template_common_name=서비스의 공통 이름을 지정하십시오.
whats_this_template_description=서비스를 설명하십시오.
wizard_back=뒤
wizard_next=다음
wizard_add=더하다
wizard_update=최신 정보
wizard_new=새로운
wizard_remove=없애다
wizard_finish=끝
smfwizard_title=SMF 서비스 생성
smfwizard_service_heading=서비스 정보를 입력하십시오
smfwizard_service_description=여기에서 최상위 서비스 정보를 지정/편집하십시오. 서비스 이름의 경우 규칙은 [general_service_category]/[name] 형식을 사용하는 것입니다. 이미 제공된 범주에는 응용 프로그램 (상위 응용 프로그램), 마일스톤 (이름 서비스와 같은 다른 서비스 모음), 플랫폼 (플랫폼 별 서비스), 시스템 (Solaris 시스템 서비스), 장치 (장치 별 서비스), 네트워크 (네트워크)가 포함됩니다./인터넷 서비스) 및 사이트 (사이트 별 설명) 자신의 범주를 지정할 수도 있지만 대부분의 서비스는 위의 하나에 편안하게 맞아야합니다. 정수 버전 번호도 지정하십시오. smf (5)를 참조하십시오. svccfg (1M)를 참조하십시오. service_bundle (4)를 참조하십시오.
smfwizard_service_name=서비스 이름을 입력하십시오
smfwizard_service_name_error=* 이름은 null이 아니어야합니다! *
smfwizard_service_version=서비스 버전 입력
smfwizard_service_version_error=* 버전은 양수 여야합니다! *
smfwizard_instance_heading=인스턴스 정보 입력
smfwizard_instance_description=인스턴스 이름을 지정하십시오. 인스턴스가 하나만있는 서비스는 일반적으로 인스턴스 이름으로 기본을 사용합니다 (예 : inetd). 다른 구성으로 실행되는 동일한 바이너리의 여러 인스턴스를 허용하는 서비스에는 여러 인스턴스가 필요합니다 (예 : 청구 된 inetd 서비스. 동일한 포트에서 실행되는 스트림 및 데이터 그램 기반 버전이 모두 필요합니다. smf (5)를 참조하십시오.
smfwizard_instance_name=인스턴스 이름 지정
smfwizard_instance_name_error=* 이름은 null이 아니어야합니다! *
smfwizard_instance_enabled=이 서비스 인스턴스가 기본적으로 사용 가능한지 여부를 지정하십시오.
smfwizard_instance_enabled_error=* 활성화는 true/false 여야합니다 *
smfwizard_sinst_name=특성이 적용되는 서비스/특정 인스턴스를 선택하십시오.
smfwizard_sinst_error=* 서비스 또는 인스턴스를 선택해야합니다! *
smfwizard_restarter_heading=재시작 정보 입력
smfwizard_restarter_description=기본적으로 서비스는 마스터 재시작 기 (시스템/다시 시작 서비스)를 사용하여 동작을 제어합니다. inetd와 같은 위임 된 다시 시작 프로그램도 지정할 수 있습니다. 이름에서 알 수 있듯이 위임 된 다시 시작 서비스를 사용하여 서비스 시작/중지를 처리하고 inetd의 경우 이러한 방법의 이름이 마스터 다시 시작 기반 서비스와 다른 이름으로 표시됩니다. inetd (1M)를 참조하십시오. svc.startd (1M)를 참조하십시오. smf_restarter (5)를 참조하십시오.
smfwizard_restarter_fmri=FMRI 식별 재시작기를 입력하십시오
smfwizard_restarter_fmri_error=* 유효한 FMRI가 아닙니다! *
smfwizard_dependency_heading=의존성 정보 입력
smfwizard_dependency_description=종속성은 서비스가 실행되기 전에 어떤 서비스를 실행해야하는지 지정하는 방법을 제공합니다. 의존성을 불러내는 것은 SMF의 주요 이점 중 하나입니다. init 스크립트 등이 엉킨 웹에 결정 론적 구조를 부과하기 때문입니다. 의존성은 서비스가 모든 것을 기다릴 것이라는 의미의 그룹화를 지정할 수있는 유연성을 제공합니다. 종속성이 온라인 상태가되거나 (require_all) 그룹의 구성원 (require_any)을 기다리거나, 활성화 된 모든 구성원을 기다리거나 (optional_all), 그룹이 활성화되지 않은 경우에만 실행 (exclude_all). 여기에 결함 전파 모델을 지정하십시오. 즉, 서비스가 종속성의 결함에 어떻게 대응해야합니까? 값은 없음 (시작 후 종속성에 신경 쓰지 않음), 오류 (종속성에 결함이있는 경우 다시 시작), 다시 시작 (종속성이 다시 시작되면 다시 시작) 및 새로 고침 (종속성이 새로 고쳐지면 다시 시작)이 없습니다. 마지막으로 종속성 및 안정성을 식별하는 fmri를 지정하십시오 (선택 사항). smf (5)를 참조하십시오.
smfwizard_dependency_name=종속성 이름을 입력하십시오
smfwizard_dependency_name_error=* 이름은 null이 아니어야합니다! *
smfwizard_dependency_type=의존성 유형 입력
smfwizard_dependency_type_error=* 유형은 null이 아니어야합니다! *
smfwizard_dependency_grouping=종속성 그룹화를 선택하십시오.
smfwizard_dependency_grouping_error=* 그룹화는 null이 아니어야합니다! *
smfwizard_dependency_restart_on=다시 시작 값 선택
smfwizard_dependency_restart_on_error=* 다시 시작 값은 널이 아니어야합니다! *
smfwizard_dependency_fmri=FMRI 식별 의존성 입력
smfwizard_dependency_fmri_error=* 유효한 FMRI가 아닙니다! *
smfwizard_dependency_stability=의존성 안정성 값 선택
smfwizard_dependency_stability_error=* 안정성은 null이 아니어야합니다! *
smfwizard_dependent_heading=종속 정보 입력
smfwizard_dependent_description=부양 가족은 약간 혼란스러워 보일 수 있습니다. 왜 어떤 서비스가 내 서비스에 의존 하는지를 지정하는 메커니즘이 있는데 후보에 의존성을 추가 할 수 없습니까? 부양 가족은 귀하가 부양 매니페스트를 소유하지 않고이를 수행 할 수없는 상황을 해결합니다. 결과적으로 종속 항목은 종속성과 매우 유사하지만 현재 서비스가이 종속성에 의존하도록 지정하는 대신 현재 서비스가이 하위 서비스/의존에 대한 종속성이라고합니다. 종속성과 마찬가지로 그룹화, restart_on 값을 지정할 수 있습니다. 부양 가족의 경우, FMRI는 부양 가족 (자식) 서비스를 말합니다. smf (5)를 참조하십시오.
smfwizard_dependent_name=종속 이름을 입력하십시오
smfwizard_dependent_name_error=* 이름은 null이 아니어야합니다! *
smfwizard_dependent_type=종속 유형을 입력하십시오
smfwizard_dependent_type_error=* 유형은 null이 아니어야합니다! *
smfwizard_dependent_grouping=종속 그룹화 선택
smfwizard_dependent_grouping_error=* 그룹화는 null이 아니어야합니다! *
smfwizard_dependent_restart_on=다시 시작 값 선택
smfwizard_dependent_restart_on_error=* 다시 시작 값은 널이 아니어야합니다! *
smfwizard_dependent_fmri=FMRI 식별 의존성 입력
smfwizard_dependent_fmri_error=* 유효한 FMRI가 아닙니다! *
smfwizard_dependent_stability=의존성 안정성 값 선택
smfwizard_dependent_stability_error=* 안정성은 null이 아니어야합니다! *
smfwizard_exec_heading=실행 방법 정보 입력
smfwizard_exec_description=실행 방법은 smf 서비스의 핵심이며 서비스 시작/중지시 실행할 프로그램을 지정합니다. 위임 된 다시 시작 (예 : inetd)을 사용하는 서비스는 시작/중지 방법 (inetd_start, inetd_stop)에 고유 한 이름을 갖지만 마스터 다시 시작을 사용하는 서비스는 일반적으로 최소한 start 및 stop 메소드라는 이름의 exec_methods를 지정합니다. 시간 초과 값 (초 단위)을 초과하는 메소드는 종료됩니다. 제한되지 않은 메소드의 경우 시간 종료를 0으로 설정하십시오. exec 메소드 자체의 경우 메소드와 인수의 경로를 제공해야합니다. 키워드 : kill 및 : true가 제공되며 실행 방법으로 사용할 수 있습니다. 전자는 서비스에 의해 시작된 모든 프로세스를 종료하고 후자는 다시 시작 자에게 성공을 리턴합니다. 또한 메소드 토큰을 사용하여 smf 관련 정보를 메소드에 전달할 수 있습니다. 사용자/그룹/권한에 대한 재정의는 기본 메소드 환경 (init에서 상 속됨)으로 지정할 수 있습니다. smf_method (5)를 참조하십시오. svc.startd (1M)를 참조하십시오. inetd (1M)를 참조하십시오.
smfwizard_exec_name=실행 방법 이름 입력
smfwizard_exec_name_error=* 이름은 null이 아니어야합니다! *
smfwizard_exec_timeout=실행 메소드가 종료 된 후 시간 종료 (초)를 입력하십시오.
smfwizard_exec_timeout_error=* 시간 초과는 정수 여야합니다! *
smfwizard_exec_exec=메소드와 인수를 실행할 경로를 입력하십시오.
smfwizard_exec_exec_error=* 실행 방법은 널이 아니어야합니다! *
smfwizard_exec_user=기본 메소드 환경 사용자에 대한 대체를 지정하십시오.
smfwizard_exec_user_error=* 잘못된 사용자! *
smfwizard_exec_group=기본 메소드 환경 그룹에 대한 대체를 지정하십시오.
smfwizard_exec_group_error=* 잘못된 그룹! *
smfwizard_exec_privileges=기본 메소드 환경 특권에 대한 대체를 지정하십시오.
smfwizard_exec_privileges_error=* 잘못된 특권! *
smfwizard_property_group_heading=특성 그룹 세부 사항 입력
smfwizard_property_group_description=smf에서 모든 서비스 정보, 종속성, 실행 방법 등은 속성 그룹 내에 속성으로 저장됩니다. 또한 서비스는 다른 속성 (예 : inetd 서비스는 inetd 위임 된 재시작자가 이해하고 필요로하는 속성을 지정해야합니다. 서비스는 자체 응용 프로그램 데이터를 속성에 저장할 수도 있습니다. smf (5)를 참조하십시오.
smfwizard_property_group_name=특성 그룹 이름 지정
smfwizard_property_group_name_error=* 이름은 null이 아니어야합니다! *
smfwizard_property_group_type=특성 그룹 유형 지정
smfwizard_property_group_type_error=* 유형은 null이 아니어야합니다! *
smfwizard_property_group_stability=property_group 안정성 값을 선택하십시오.
smfwizard_property_group_stability_error=* 안정성은 null이 아니어야합니다! *
smfwizard_property_heading=부동산 정보 입력
smfwizard_property_description=속성은 속성 그룹과 연결되며 서비스 또는 인스턴스 관련 정보를 저장하는 데 사용됩니다. smf (5)를 참조하십시오.
smfwizard_pgroup_name=속성 그룹 선택
mfwizard_pgroup_name_error=* 속성 그룹은 null이 아니어야합니다! *
smfwizard_property_name=속성 이름을 입력하십시오
smfwizard_property_name_error=* 이름은 null이 아니어야합니다! *
smfwizard_property_type=부동산 종류 선택
smfwizard_property_type_error=* 유형은 null이 아니어야합니다! *
smfwizard_property_value=속성 값 입력
smfwizard_property_value_error=*잘못된 값!*
smfwizard_template_heading=템플릿 상세 정보 입력
smfwizard_template_description=서비스 세부 사항, 일반적으로 사용되는 이름 및 서비스의 기능에 대한 설명을 제공하십시오.
smfwizard_template_common_name=서비스의 공통 이름을 지정하십시오.
smfwizard_template_common_name_error=* 공통 이름은 null이 아니어야합니다! *
smfwizard_template_svc_description=서비스 설명
smfwizard_template_svc_description_error=* 설명은 null이 아니어야합니다! *
smfwizard_manpage_heading=맨 페이지 세부 사항 입력
smfwizard_manpage_description=서비스 맨 페이지 설명서에 관한 정보를 제공하십시오. man (1)을 참조하십시오.
smfwizard_manpage_title=맨 페이지 제목 지정
smfwizard_manpage_title_error=* 제목은 null이 아니어야합니다! *
smfwizard_manpage_section=맨 페이지 섹션 지정
smfwizard_manpage_section_error=* 섹션은 널이 아니어야합니다! *
smfwizard_manpage_manpath=맨 패스 지정
smfwizard_manpage_manpath_error=* 맨 패스는 null이 아니어야합니다! *
